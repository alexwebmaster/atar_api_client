<?php
/**
 * DevicesApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * API BaaS - Atar B2B
 *
 * Documentação da API do serviço de Banking as a Service.
 *
 * OpenAPI spec version: v3.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.30
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Swagger\Client;

use Swagger\Client\Configuration;
use Swagger\Client\ApiException;
use Swagger\Client\ObjectSerializer;

/**
 * DevicesApiTest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class DevicesApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for payDeviceCashinPost
     *
     * Recarrega o device do usuario desejado.
     *
     */
    public function testPayDeviceCashinPost()
    {
    }

    /**
     * Test case for payDeviceCashoutPost
     *
     * Descarrega o device do usuario desejado.
     *
     */
    public function testPayDeviceCashoutPost()
    {
    }

    /**
     * Test case for payDevicesCancelPost
     *
     * Cancela um dispositivo para o usuario.
     *
     */
    public function testPayDevicesCancelPost()
    {
    }

    /**
     * Test case for payDevicesEnablePost
     *
     * Ativa um dispositivo para o usuario.
     *
     */
    public function testPayDevicesEnablePost()
    {
    }

    /**
     * Test case for payDevicesFeesGet
     *
     * Retorna as taxas do device.
     *
     */
    public function testPayDevicesFeesGet()
    {
    }

    /**
     * Test case for payDevicesGet
     *
     * Recupera dispositivos do usuario.
     *
     */
    public function testPayDevicesGet()
    {
    }

    /**
     * Test case for payDevicesIdGet
     *
     * Recupera um dispositivo do usuario.
     *
     */
    public function testPayDevicesIdGet()
    {
    }

    /**
     * Test case for payDevicesLockPut
     *
     * Bloqueia temporariamente o dispositivo.
     *
     */
    public function testPayDevicesLockPut()
    {
    }

    /**
     * Test case for payDevicesNewExternalPost
     *
     * Cria um dispositivo externo para o usuario.
     *
     */
    public function testPayDevicesNewExternalPost()
    {
    }

    /**
     * Test case for payDevicesNewPost
     *
     * Cria um dispositivo para o usuario.
     *
     */
    public function testPayDevicesNewPost()
    {
    }

    /**
     * Test case for payDevicesPinPut
     *
     * Altera a senha do dispositivo.
     *
     */
    public function testPayDevicesPinPut()
    {
    }

    /**
     * Test case for payDevicesReplacePost
     *
     * Troca um dispositivo para o usuario.
     *
     */
    public function testPayDevicesReplacePost()
    {
    }

    /**
     * Test case for payDevicesUnlockPut
     *
     * Desbloqueia o dispositivo.
     *
     */
    public function testPayDevicesUnlockPut()
    {
    }

    /**
     * Test case for payDevicesVirtualCardDelete
     *
     * Retorna o cartão virtual pelo id.
     *
     */
    public function testPayDevicesVirtualCardDelete()
    {
    }

    /**
     * Test case for payDevicesVirtualCardGet
     *
     * Retorna o cartão virtual pelo id.
     *
     */
    public function testPayDevicesVirtualCardGet()
    {
    }

    /**
     * Test case for payDevicesVirtualCardPost
     *
     * Gera um novo cartão virtual.
     *
     */
    public function testPayDevicesVirtualCardPost()
    {
    }

    /**
     * Test case for payDevicesVirtualCardsGet
     *
     * Recupera os cartões virtuais do usuario.
     *
     */
    public function testPayDevicesVirtualCardsGet()
    {
    }
}
