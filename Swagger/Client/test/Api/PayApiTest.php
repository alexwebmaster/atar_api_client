<?php
/**
 * PayApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * API BaaS - Atar B2B
 *
 * Documentação da API do serviço de Banking as a Service.
 *
 * OpenAPI spec version: v3.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.30
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Swagger\Client;

use Swagger\Client\Configuration;
use Swagger\Client\ApiException;
use Swagger\Client\ObjectSerializer;

/**
 * PayApiTest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class PayApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for payBalanceGet
     *
     * Recupera o saldo do usuario.
     *
     */
    public function testPayBalanceGet()
    {
    }

    /**
     * Test case for payBoletoFeesGet
     *
     * Recupera taxas de cash-in do usuario.
     *
     */
    public function testPayBoletoFeesGet()
    {
    }

    /**
     * Test case for payBoletoGet
     *
     * Recupera boleto do cash-in requisitado.
     *
     */
    public function testPayBoletoGet()
    {
    }

    /**
     * Test case for payBoletoPost
     *
     * Gera boleto de cash-in.
     *
     */
    public function testPayBoletoPost()
    {
    }

    /**
     * Test case for payCashinOptionsGet
     *
     * retorna as opções disponíveis para cashin, e as tarifas/limites, envolvidos.
     *
     */
    public function testPayCashinOptionsGet()
    {
    }

    /**
     * Test case for payCashinTedReceiptPost
     *
     * Inicia chat via intercom para envio do comprovante.
     *
     */
    public function testPayCashinTedReceiptPost()
    {
    }

    /**
     * Test case for payCashoutBoletoDetailsGet
     *
     * Realiza a consulta dos dados de um boleto.
     *
     */
    public function testPayCashoutBoletoDetailsGet()
    {
    }

    /**
     * Test case for payCashoutBoletoPost
     *
     * Realiza o pagamento de um boleto.
     *
     */
    public function testPayCashoutBoletoPost()
    {
    }

    /**
     * Test case for payCashoutPhoneRechargeOptionsGet
     *
     * Get saved cellphone numbers and options for top up.
     *
     */
    public function testPayCashoutPhoneRechargeOptionsGet()
    {
    }

    /**
     * Test case for payCashoutPhoneRechargePost
     *
     * Recharge a prepaid phone number..
     *
     */
    public function testPayCashoutPhoneRechargePost()
    {
    }

    /**
     * Test case for payCashoutPhoneRechargeValuesGet
     *
     * Get carrier and recharge values by cellphone number.
     *
     */
    public function testPayCashoutPhoneRechargeValuesGet()
    {
    }

    /**
     * Test case for payCheckoutDelete
     *
     * Nega o checkout.
     *
     */
    public function testPayCheckoutDelete()
    {
    }

    /**
     * Test case for payCheckoutGet
     *
     * Consulta os detalhes do checkout.
     *
     */
    public function testPayCheckoutGet()
    {
    }

    /**
     * Test case for payCheckoutPut
     *
     * Confirma o checkout e realiza o pagamento.
     *
     */
    public function testPayCheckoutPut()
    {
    }

    /**
     * Test case for payExternalTransferPost
     *
     * Realiza uma transferencia bancaria (TED).
     *
     */
    public function testPayExternalTransferPost()
    {
    }

    /**
     * Test case for payHistoryRecentsGet
     *
     * Historico de eventos recentes do usuario a partir ou antes de determinada data.
     *
     */
    public function testPayHistoryRecentsGet()
    {
    }

    /**
     * Test case for payInternalTransferPost
     *
     * Realiza uma transferencia entre usuarios.
     *
     */
    public function testPayInternalTransferPost()
    {
    }

    /**
     * Test case for payNotificationsEmailPost
     *
     * Envia notificacoes por e-mail.
     *
     */
    public function testPayNotificationsEmailPost()
    {
    }

    /**
     * Test case for payNotificationsPushDelete
     *
     * Deleta token do banco de dados e para o envio de push notification.
     *
     */
    public function testPayNotificationsPushDelete()
    {
    }

    /**
     * Test case for payNotificationsPushPost
     *
     * Salva token para envio de push notification.
     *
     */
    public function testPayNotificationsPushPost()
    {
    }

    /**
     * Test case for payPurchasesGet
     *
     * Recupera uma compra do usuario.
     *
     */
    public function testPayPurchasesGet()
    {
    }

    /**
     * Test case for payPurchasesPut
     *
     * Atualiza uma compra do usuario.
     *
     */
    public function testPayPurchasesPut()
    {
    }

    /**
     * Test case for paySubscriptionGet
     *
     * Recupera o plano ativo no momento.
     *
     */
    public function testPaySubscriptionGet()
    {
    }

    /**
     * Test case for paySubscriptionPost
     *
     * Recupera detalhes do plano atrelado ao dispositivo informado.
     *
     */
    public function testPaySubscriptionPost()
    {
    }

    /**
     * Test case for payTransferOptionsGet
     *
     * Retorna as opções disponíveis para transferencia e as tarifas e limites envolvidos.
     *
     */
    public function testPayTransferOptionsGet()
    {
    }
}
